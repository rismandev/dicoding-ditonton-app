// Mocks generated by Mockito 5.4.2 from annotations
// in ditonton/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:convert' as _i26;
import 'dart:typed_data' as _i27;

import 'package:dartz/dartz.dart' as _i3;
import 'package:ditonton/common/db_helper.dart' as _i5;
import 'package:ditonton/common/failure.dart' as _i10;
import 'package:ditonton/features/movie/data/datasources/db/database_helper.dart'
    as _i17;
import 'package:ditonton/features/movie/data/datasources/movie_local_data_source.dart'
    as _i15;
import 'package:ditonton/features/movie/data/datasources/movie_remote_data_source.dart'
    as _i13;
import 'package:ditonton/features/movie/data/models/movie_detail_model.dart'
    as _i4;
import 'package:ditonton/features/movie/data/models/movie_model.dart' as _i14;
import 'package:ditonton/features/movie/data/models/movie_table.dart' as _i16;
import 'package:ditonton/features/movie/domain/entities/movie.dart' as _i11;
import 'package:ditonton/features/movie/domain/entities/movie_detail.dart'
    as _i12;
import 'package:ditonton/features/movie/domain/repositories/movie_repository.dart'
    as _i9;
import 'package:ditonton/features/tv_series/data/datasources/db/database_helper.dart'
    as _i25;
import 'package:ditonton/features/tv_series/data/datasources/tv_series_local_data_source.dart'
    as _i23;
import 'package:ditonton/features/tv_series/data/datasources/tv_series_remote_data_source.dart'
    as _i21;
import 'package:ditonton/features/tv_series/data/models/tv_series_detail_model.dart'
    as _i6;
import 'package:ditonton/features/tv_series/data/models/tv_series_model.dart'
    as _i22;
import 'package:ditonton/features/tv_series/data/models/tv_series_table.dart'
    as _i24;
import 'package:ditonton/features/tv_series/domain/entities/tv_series.dart'
    as _i19;
import 'package:ditonton/features/tv_series/domain/entities/tv_series_detail.dart'
    as _i20;
import 'package:ditonton/features/tv_series/domain/repositories/tv_series_repository.dart'
    as _i18;
import 'package:http/http.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDatabase_0 extends _i1.SmartFake implements _i2.Database {
  _FakeDatabase_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovieDetailResponse_2 extends _i1.SmartFake
    implements _i4.MovieDetailResponse {
  _FakeMovieDetailResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseHelper_3 extends _i1.SmartFake
    implements _i5.DatabaseHelper {
  _FakeDatabaseHelper_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvSeriesDetailModel_4 extends _i1.SmartFake
    implements _i6.TvSeriesDetailModel {
  _FakeTvSeriesDetailModel_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_5 extends _i1.SmartFake implements _i7.Response {
  _FakeResponse_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_6 extends _i1.SmartFake
    implements _i7.StreamedResponse {
  _FakeStreamedResponse_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i5.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Database?> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i8.Future<_i2.Database?>.value(),
      ) as _i8.Future<_i2.Database?>);
  @override
  _i8.Future<_i2.Database> initDb() => (super.noSuchMethod(
        Invocation.method(
          #initDb,
          [],
        ),
        returnValue: _i8.Future<_i2.Database>.value(_FakeDatabase_0(
          this,
          Invocation.method(
            #initDb,
            [],
          ),
        )),
      ) as _i8.Future<_i2.Database>);
  @override
  void onCreateTable1(
    _i2.Database? db,
    int? version,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onCreateTable1,
          [
            db,
            version,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i8.Future<int> onInsert(
    String? tbName,
    Map<String, dynamic>? map,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onInsert,
          [
            tbName,
            map,
          ],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);
  @override
  _i8.Future<int> onDelete(
    String? tbName,
    int? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onDelete,
          [
            tbName,
            id,
          ],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);
  @override
  _i8.Future<List<Map<String, dynamic>>> onSelect(String? tbName) =>
      (super.noSuchMethod(
        Invocation.method(
          #onSelect,
          [tbName],
        ),
        returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i8.Future<List<Map<String, dynamic>>>);
  @override
  _i8.Future<Map<String, dynamic>?> getById(
    String? tbName,
    int? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getById,
          [
            tbName,
            id,
          ],
        ),
        returnValue: _i8.Future<Map<String, dynamic>?>.value(),
      ) as _i8.Future<Map<String, dynamic>?>);
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i9.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i3.Either<_i10.Failure, List<_i11.Movie>>>
      getNowPlayingMovies() => (super.noSuchMethod(
            Invocation.method(
              #getNowPlayingMovies,
              [],
            ),
            returnValue:
                _i8.Future<_i3.Either<_i10.Failure, List<_i11.Movie>>>.value(
                    _FakeEither_1<_i10.Failure, List<_i11.Movie>>(
              this,
              Invocation.method(
                #getNowPlayingMovies,
                [],
              ),
            )),
          ) as _i8.Future<_i3.Either<_i10.Failure, List<_i11.Movie>>>);
  @override
  _i8.Future<_i3.Either<_i10.Failure, List<_i11.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularMovies,
          [],
        ),
        returnValue:
            _i8.Future<_i3.Either<_i10.Failure, List<_i11.Movie>>>.value(
                _FakeEither_1<_i10.Failure, List<_i11.Movie>>(
          this,
          Invocation.method(
            #getPopularMovies,
            [],
          ),
        )),
      ) as _i8.Future<_i3.Either<_i10.Failure, List<_i11.Movie>>>);
  @override
  _i8.Future<_i3.Either<_i10.Failure, List<_i11.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedMovies,
          [],
        ),
        returnValue:
            _i8.Future<_i3.Either<_i10.Failure, List<_i11.Movie>>>.value(
                _FakeEither_1<_i10.Failure, List<_i11.Movie>>(
          this,
          Invocation.method(
            #getTopRatedMovies,
            [],
          ),
        )),
      ) as _i8.Future<_i3.Either<_i10.Failure, List<_i11.Movie>>>);
  @override
  _i8.Future<_i3.Either<_i10.Failure, _i12.MovieDetail>> getMovieDetail(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetail,
          [id],
        ),
        returnValue:
            _i8.Future<_i3.Either<_i10.Failure, _i12.MovieDetail>>.value(
                _FakeEither_1<_i10.Failure, _i12.MovieDetail>(
          this,
          Invocation.method(
            #getMovieDetail,
            [id],
          ),
        )),
      ) as _i8.Future<_i3.Either<_i10.Failure, _i12.MovieDetail>>);
  @override
  _i8.Future<_i3.Either<_i10.Failure, List<_i11.Movie>>>
      getMovieRecommendations(int? id) => (super.noSuchMethod(
            Invocation.method(
              #getMovieRecommendations,
              [id],
            ),
            returnValue:
                _i8.Future<_i3.Either<_i10.Failure, List<_i11.Movie>>>.value(
                    _FakeEither_1<_i10.Failure, List<_i11.Movie>>(
              this,
              Invocation.method(
                #getMovieRecommendations,
                [id],
              ),
            )),
          ) as _i8.Future<_i3.Either<_i10.Failure, List<_i11.Movie>>>);
  @override
  _i8.Future<_i3.Either<_i10.Failure, List<_i11.Movie>>> searchMovies(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMovies,
          [query],
        ),
        returnValue:
            _i8.Future<_i3.Either<_i10.Failure, List<_i11.Movie>>>.value(
                _FakeEither_1<_i10.Failure, List<_i11.Movie>>(
          this,
          Invocation.method(
            #searchMovies,
            [query],
          ),
        )),
      ) as _i8.Future<_i3.Either<_i10.Failure, List<_i11.Movie>>>);
  @override
  _i8.Future<_i3.Either<_i10.Failure, String>> saveWatchlist(
          _i12.MovieDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWatchlist,
          [movie],
        ),
        returnValue: _i8.Future<_i3.Either<_i10.Failure, String>>.value(
            _FakeEither_1<_i10.Failure, String>(
          this,
          Invocation.method(
            #saveWatchlist,
            [movie],
          ),
        )),
      ) as _i8.Future<_i3.Either<_i10.Failure, String>>);
  @override
  _i8.Future<_i3.Either<_i10.Failure, String>> removeWatchlist(
          _i12.MovieDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [movie],
        ),
        returnValue: _i8.Future<_i3.Either<_i10.Failure, String>>.value(
            _FakeEither_1<_i10.Failure, String>(
          this,
          Invocation.method(
            #removeWatchlist,
            [movie],
          ),
        )),
      ) as _i8.Future<_i3.Either<_i10.Failure, String>>);
  @override
  _i8.Future<bool> isAddedToWatchlist(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedToWatchlist,
          [id],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);
  @override
  _i8.Future<_i3.Either<_i10.Failure, List<_i11.Movie>>> getWatchlistMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistMovies,
          [],
        ),
        returnValue:
            _i8.Future<_i3.Either<_i10.Failure, List<_i11.Movie>>>.value(
                _FakeEither_1<_i10.Failure, List<_i11.Movie>>(
          this,
          Invocation.method(
            #getWatchlistMovies,
            [],
          ),
        )),
      ) as _i8.Future<_i3.Either<_i10.Failure, List<_i11.Movie>>>);
}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i13.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<List<_i14.MovieModel>> getNowPlayingMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNowPlayingMovies,
          [],
        ),
        returnValue:
            _i8.Future<List<_i14.MovieModel>>.value(<_i14.MovieModel>[]),
      ) as _i8.Future<List<_i14.MovieModel>>);
  @override
  _i8.Future<List<_i14.MovieModel>> getPopularMovies() => (super.noSuchMethod(
        Invocation.method(
          #getPopularMovies,
          [],
        ),
        returnValue:
            _i8.Future<List<_i14.MovieModel>>.value(<_i14.MovieModel>[]),
      ) as _i8.Future<List<_i14.MovieModel>>);
  @override
  _i8.Future<List<_i14.MovieModel>> getTopRatedMovies() => (super.noSuchMethod(
        Invocation.method(
          #getTopRatedMovies,
          [],
        ),
        returnValue:
            _i8.Future<List<_i14.MovieModel>>.value(<_i14.MovieModel>[]),
      ) as _i8.Future<List<_i14.MovieModel>>);
  @override
  _i8.Future<_i4.MovieDetailResponse> getMovieDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetail,
          [id],
        ),
        returnValue: _i8.Future<_i4.MovieDetailResponse>.value(
            _FakeMovieDetailResponse_2(
          this,
          Invocation.method(
            #getMovieDetail,
            [id],
          ),
        )),
      ) as _i8.Future<_i4.MovieDetailResponse>);
  @override
  _i8.Future<List<_i14.MovieModel>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieRecommendations,
          [id],
        ),
        returnValue:
            _i8.Future<List<_i14.MovieModel>>.value(<_i14.MovieModel>[]),
      ) as _i8.Future<List<_i14.MovieModel>>);
  @override
  _i8.Future<List<_i14.MovieModel>> searchMovies(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMovies,
          [query],
        ),
        returnValue:
            _i8.Future<List<_i14.MovieModel>>.value(<_i14.MovieModel>[]),
      ) as _i8.Future<List<_i14.MovieModel>>);
}

/// A class which mocks [MovieLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieLocalDataSource extends _i1.Mock
    implements _i15.MovieLocalDataSource {
  MockMovieLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<String> insertWatchlist(_i16.MovieTable? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [movie],
        ),
        returnValue: _i8.Future<String>.value(''),
      ) as _i8.Future<String>);
  @override
  _i8.Future<String> removeWatchlist(_i16.MovieTable? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [movie],
        ),
        returnValue: _i8.Future<String>.value(''),
      ) as _i8.Future<String>);
  @override
  _i8.Future<_i16.MovieTable?> getMovieById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getMovieById,
          [id],
        ),
        returnValue: _i8.Future<_i16.MovieTable?>.value(),
      ) as _i8.Future<_i16.MovieTable?>);
  @override
  _i8.Future<List<_i16.MovieTable>> getWatchlistMovies() => (super.noSuchMethod(
        Invocation.method(
          #getWatchlistMovies,
          [],
        ),
        returnValue:
            _i8.Future<List<_i16.MovieTable>>.value(<_i16.MovieTable>[]),
      ) as _i8.Future<List<_i16.MovieTable>>);
}

/// A class which mocks [MovieDBHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieDBHelper extends _i1.Mock implements _i17.MovieDBHelper {
  MockMovieDBHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.DatabaseHelper get databaseHelper => (super.noSuchMethod(
        Invocation.getter(#databaseHelper),
        returnValue: _FakeDatabaseHelper_3(
          this,
          Invocation.getter(#databaseHelper),
        ),
      ) as _i5.DatabaseHelper);
  @override
  _i8.Future<bool> isDatabaseOpened() => (super.noSuchMethod(
        Invocation.method(
          #isDatabaseOpened,
          [],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);
  @override
  _i8.Future<int> insertWatchlist(_i16.MovieTable? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [movie],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);
  @override
  _i8.Future<int> removeWatchlist(_i16.MovieTable? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [movie],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);
  @override
  _i8.Future<Map<String, dynamic>?> getMovieById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieById,
          [id],
        ),
        returnValue: _i8.Future<Map<String, dynamic>?>.value(),
      ) as _i8.Future<Map<String, dynamic>?>);
  @override
  _i8.Future<List<Map<String, dynamic>>> getWatchlistMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistMovies,
          [],
        ),
        returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i8.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [TvSeriesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesRepository extends _i1.Mock
    implements _i18.TvSeriesRepository {
  MockTvSeriesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i3.Either<_i10.Failure, List<_i19.TvSeries>>>
      getAiringTodayTvSeries() => (super.noSuchMethod(
            Invocation.method(
              #getAiringTodayTvSeries,
              [],
            ),
            returnValue:
                _i8.Future<_i3.Either<_i10.Failure, List<_i19.TvSeries>>>.value(
                    _FakeEither_1<_i10.Failure, List<_i19.TvSeries>>(
              this,
              Invocation.method(
                #getAiringTodayTvSeries,
                [],
              ),
            )),
          ) as _i8.Future<_i3.Either<_i10.Failure, List<_i19.TvSeries>>>);
  @override
  _i8.Future<_i3.Either<_i10.Failure, List<_i19.TvSeries>>>
      getPopularTvSeries() => (super.noSuchMethod(
            Invocation.method(
              #getPopularTvSeries,
              [],
            ),
            returnValue:
                _i8.Future<_i3.Either<_i10.Failure, List<_i19.TvSeries>>>.value(
                    _FakeEither_1<_i10.Failure, List<_i19.TvSeries>>(
              this,
              Invocation.method(
                #getPopularTvSeries,
                [],
              ),
            )),
          ) as _i8.Future<_i3.Either<_i10.Failure, List<_i19.TvSeries>>>);
  @override
  _i8.Future<_i3.Either<_i10.Failure, List<_i19.TvSeries>>>
      getTopRatedTvSeries() => (super.noSuchMethod(
            Invocation.method(
              #getTopRatedTvSeries,
              [],
            ),
            returnValue:
                _i8.Future<_i3.Either<_i10.Failure, List<_i19.TvSeries>>>.value(
                    _FakeEither_1<_i10.Failure, List<_i19.TvSeries>>(
              this,
              Invocation.method(
                #getTopRatedTvSeries,
                [],
              ),
            )),
          ) as _i8.Future<_i3.Either<_i10.Failure, List<_i19.TvSeries>>>);
  @override
  _i8.Future<_i3.Either<_i10.Failure, _i20.TvSeriesDetail>> getTvSeriesDetail(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvSeriesDetail,
          [id],
        ),
        returnValue:
            _i8.Future<_i3.Either<_i10.Failure, _i20.TvSeriesDetail>>.value(
                _FakeEither_1<_i10.Failure, _i20.TvSeriesDetail>(
          this,
          Invocation.method(
            #getTvSeriesDetail,
            [id],
          ),
        )),
      ) as _i8.Future<_i3.Either<_i10.Failure, _i20.TvSeriesDetail>>);
  @override
  _i8.Future<_i3.Either<_i10.Failure, List<_i19.TvSeries>>>
      getTvSeriesRecommendations(int? id) => (super.noSuchMethod(
            Invocation.method(
              #getTvSeriesRecommendations,
              [id],
            ),
            returnValue:
                _i8.Future<_i3.Either<_i10.Failure, List<_i19.TvSeries>>>.value(
                    _FakeEither_1<_i10.Failure, List<_i19.TvSeries>>(
              this,
              Invocation.method(
                #getTvSeriesRecommendations,
                [id],
              ),
            )),
          ) as _i8.Future<_i3.Either<_i10.Failure, List<_i19.TvSeries>>>);
  @override
  _i8.Future<_i3.Either<_i10.Failure, List<_i19.TvSeries>>> searchTvSeries(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchTvSeries,
          [query],
        ),
        returnValue:
            _i8.Future<_i3.Either<_i10.Failure, List<_i19.TvSeries>>>.value(
                _FakeEither_1<_i10.Failure, List<_i19.TvSeries>>(
          this,
          Invocation.method(
            #searchTvSeries,
            [query],
          ),
        )),
      ) as _i8.Future<_i3.Either<_i10.Failure, List<_i19.TvSeries>>>);
  @override
  _i8.Future<_i3.Either<_i10.Failure, String>> saveWatchlist(
          _i20.TvSeriesDetail? tvSeries) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWatchlist,
          [tvSeries],
        ),
        returnValue: _i8.Future<_i3.Either<_i10.Failure, String>>.value(
            _FakeEither_1<_i10.Failure, String>(
          this,
          Invocation.method(
            #saveWatchlist,
            [tvSeries],
          ),
        )),
      ) as _i8.Future<_i3.Either<_i10.Failure, String>>);
  @override
  _i8.Future<_i3.Either<_i10.Failure, String>> removeWatchlist(
          _i20.TvSeriesDetail? tvSeries) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [tvSeries],
        ),
        returnValue: _i8.Future<_i3.Either<_i10.Failure, String>>.value(
            _FakeEither_1<_i10.Failure, String>(
          this,
          Invocation.method(
            #removeWatchlist,
            [tvSeries],
          ),
        )),
      ) as _i8.Future<_i3.Either<_i10.Failure, String>>);
  @override
  _i8.Future<bool> isAddedToWatchlist(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedToWatchlist,
          [id],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);
  @override
  _i8.Future<_i3.Either<_i10.Failure, List<_i19.TvSeries>>>
      getWatchlistTvSeries() => (super.noSuchMethod(
            Invocation.method(
              #getWatchlistTvSeries,
              [],
            ),
            returnValue:
                _i8.Future<_i3.Either<_i10.Failure, List<_i19.TvSeries>>>.value(
                    _FakeEither_1<_i10.Failure, List<_i19.TvSeries>>(
              this,
              Invocation.method(
                #getWatchlistTvSeries,
                [],
              ),
            )),
          ) as _i8.Future<_i3.Either<_i10.Failure, List<_i19.TvSeries>>>);
}

/// A class which mocks [TvSeriesRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesRemoteDataSource extends _i1.Mock
    implements _i21.TvSeriesRemoteDataSource {
  MockTvSeriesRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<List<_i22.TvSeriesModel>> getAiringTodayTvSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAiringTodayTvSeries,
          [],
        ),
        returnValue:
            _i8.Future<List<_i22.TvSeriesModel>>.value(<_i22.TvSeriesModel>[]),
      ) as _i8.Future<List<_i22.TvSeriesModel>>);
  @override
  _i8.Future<List<_i22.TvSeriesModel>> getPopularTvSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularTvSeries,
          [],
        ),
        returnValue:
            _i8.Future<List<_i22.TvSeriesModel>>.value(<_i22.TvSeriesModel>[]),
      ) as _i8.Future<List<_i22.TvSeriesModel>>);
  @override
  _i8.Future<List<_i22.TvSeriesModel>> getTopRatedTvSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedTvSeries,
          [],
        ),
        returnValue:
            _i8.Future<List<_i22.TvSeriesModel>>.value(<_i22.TvSeriesModel>[]),
      ) as _i8.Future<List<_i22.TvSeriesModel>>);
  @override
  _i8.Future<_i6.TvSeriesDetailModel> getTvSeriesDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvSeriesDetail,
          [id],
        ),
        returnValue: _i8.Future<_i6.TvSeriesDetailModel>.value(
            _FakeTvSeriesDetailModel_4(
          this,
          Invocation.method(
            #getTvSeriesDetail,
            [id],
          ),
        )),
      ) as _i8.Future<_i6.TvSeriesDetailModel>);
  @override
  _i8.Future<List<_i22.TvSeriesModel>> getTvSeriesRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvSeriesRecommendations,
          [id],
        ),
        returnValue:
            _i8.Future<List<_i22.TvSeriesModel>>.value(<_i22.TvSeriesModel>[]),
      ) as _i8.Future<List<_i22.TvSeriesModel>>);
  @override
  _i8.Future<List<_i22.TvSeriesModel>> searchTvSeries(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchTvSeries,
          [query],
        ),
        returnValue:
            _i8.Future<List<_i22.TvSeriesModel>>.value(<_i22.TvSeriesModel>[]),
      ) as _i8.Future<List<_i22.TvSeriesModel>>);
}

/// A class which mocks [TvSeriesLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesLocalDataSource extends _i1.Mock
    implements _i23.TvSeriesLocalDataSource {
  MockTvSeriesLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<String> insertWatchlist(_i24.TvSeriesTable? tvSeries) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [tvSeries],
        ),
        returnValue: _i8.Future<String>.value(''),
      ) as _i8.Future<String>);
  @override
  _i8.Future<String> removeWatchlist(_i24.TvSeriesTable? tvSeries) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [tvSeries],
        ),
        returnValue: _i8.Future<String>.value(''),
      ) as _i8.Future<String>);
  @override
  _i8.Future<_i24.TvSeriesTable?> getTvSeriesById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvSeriesById,
          [id],
        ),
        returnValue: _i8.Future<_i24.TvSeriesTable?>.value(),
      ) as _i8.Future<_i24.TvSeriesTable?>);
  @override
  _i8.Future<List<_i24.TvSeriesTable>> getWatchlistTvSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistTvSeries,
          [],
        ),
        returnValue:
            _i8.Future<List<_i24.TvSeriesTable>>.value(<_i24.TvSeriesTable>[]),
      ) as _i8.Future<List<_i24.TvSeriesTable>>);
}

/// A class which mocks [TvSeriesDBHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesDBHelper extends _i1.Mock implements _i25.TvSeriesDBHelper {
  MockTvSeriesDBHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.DatabaseHelper get databaseHelper => (super.noSuchMethod(
        Invocation.getter(#databaseHelper),
        returnValue: _FakeDatabaseHelper_3(
          this,
          Invocation.getter(#databaseHelper),
        ),
      ) as _i5.DatabaseHelper);
  @override
  _i8.Future<bool> isDatabaseOpened() => (super.noSuchMethod(
        Invocation.method(
          #isDatabaseOpened,
          [],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);
  @override
  _i8.Future<int> insertWatchlist(_i24.TvSeriesTable? tvSeries) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [tvSeries],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);
  @override
  _i8.Future<int> removeWatchlist(_i24.TvSeriesTable? tvSeries) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [tvSeries],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);
  @override
  _i8.Future<Map<String, dynamic>?> getTvSeriesById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvSeriesById,
          [id],
        ),
        returnValue: _i8.Future<Map<String, dynamic>?>.value(),
      ) as _i8.Future<Map<String, dynamic>?>);
  @override
  _i8.Future<List<Map<String, dynamic>>> getWatchlistTvSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistTvSeries,
          [],
        ),
        returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i8.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i7.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i7.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i8.Future<_i7.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i8.Future<_i7.Response>);
  @override
  _i8.Future<_i7.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i8.Future<_i7.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i8.Future<_i7.Response>);
  @override
  _i8.Future<_i7.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i26.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i8.Future<_i7.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i8.Future<_i7.Response>);
  @override
  _i8.Future<_i7.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i26.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i8.Future<_i7.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i8.Future<_i7.Response>);
  @override
  _i8.Future<_i7.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i26.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i8.Future<_i7.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i8.Future<_i7.Response>);
  @override
  _i8.Future<_i7.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i26.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i8.Future<_i7.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i8.Future<_i7.Response>);
  @override
  _i8.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i8.Future<String>.value(''),
      ) as _i8.Future<String>);
  @override
  _i8.Future<_i27.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i8.Future<_i27.Uint8List>.value(_i27.Uint8List(0)),
      ) as _i8.Future<_i27.Uint8List>);
  @override
  _i8.Future<_i7.StreamedResponse> send(_i7.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i8.Future<_i7.StreamedResponse>.value(_FakeStreamedResponse_6(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i8.Future<_i7.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
